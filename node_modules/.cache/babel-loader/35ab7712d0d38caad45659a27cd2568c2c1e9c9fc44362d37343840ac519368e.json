{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\face-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    particles: {\n      number: {\n        value: 30;\n        density: {\n          enable: true;\n          value_area: 800;\n        }\n      }\n    }\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      className: \"particles\"\n      // id=\"tsparticles\"\n      ,\n      init: particlesInit,\n      loaded: particlesLoaded\n      // options={{\n      //     background: {\n      //         color: {\n      //             value: \"#0d47a1\",\n      //         },\n      //     },\n      //     fpsLimit: 120,\n      //     interactivity: {\n      //         events: {\n      //             onClick: {\n      //                 enable: true,\n      //                 mode: \"push\",\n      //             },\n      //             onHover: {\n      //                 enable: true,\n      //                 mode: \"repulse\",\n      //             },\n      //             resize: true,\n      //         },\n      //         modes: {\n      //             push: {\n      //                 quantity: 4,\n      //             },\n      //             repulse: {\n      //                 distance: 200,\n      //                 duration: 0.4,\n      //             },\n      //         },\n      //     },\n      //     particles: {\n      //         color: {\n      //             value: \"#ffffff\",\n      //         },\n      //         links: {\n      //             color: \"#ffffff\",\n      //             distance: 150,\n      //             enable: true,\n      //             opacity: 0.5,\n      //             width: 1,\n      //         },\n      //         collisions: {\n      //             enable: true,\n      //         },\n      //         move: {\n      //             directions: \"none\",\n      //             enable: true,\n      //             outModes: {\n      //                 default: \"bounce\",\n      //             },\n      //             random: false,\n      //             speed: 6,\n      //             straight: false,\n      //         },\n      //         number: {\n      //             density: {\n      //                 enable: true,\n      //                 area: 800,\n      //             },\n      //             value: 10,\n      //         },\n      //         opacity: {\n      //             value: 0.5,\n      //         },\n      //         shape: {\n      //             type: \"circle\",\n      //         },\n      //         size: {\n      //             value: { min: 1, max: 5 },\n      //         },\n      //     },\n      //     detectRetina: true,\n      // }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Logo","ImageLinkForm","Rank","useCallback","Particles","loadFull","App","particlesInit","engine","console","log","particles","number","value","density","enable","value_area","particlesLoaded","container"],"sources":["E:/React/face-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\n\n\n\nconst App = () => {\n\n    const particlesInit = useCallback(async engine => {\n      console.log(engine);\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n        particles: {\n          number: {\n            value: 30\n            density: {\n              enable: true\n              value_area: 800\n            }\n          }\n        }\n\n      await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async container => {\n\n\n      await console.log(container);\n  }, []);\n\n    return (\n      <div className=\"App\">\n\n<Particles className='particles'\n              // id=\"tsparticles\"\n              init={particlesInit}\n              loaded={particlesLoaded}\n            // options={{\n            //     background: {\n            //         color: {\n            //             value: \"#0d47a1\",\n            //         },\n            //     },\n            //     fpsLimit: 120,\n            //     interactivity: {\n            //         events: {\n            //             onClick: {\n            //                 enable: true,\n            //                 mode: \"push\",\n            //             },\n            //             onHover: {\n            //                 enable: true,\n            //                 mode: \"repulse\",\n            //             },\n            //             resize: true,\n            //         },\n            //         modes: {\n            //             push: {\n            //                 quantity: 4,\n            //             },\n            //             repulse: {\n            //                 distance: 200,\n            //                 duration: 0.4,\n            //             },\n            //         },\n            //     },\n            //     particles: {\n            //         color: {\n            //             value: \"#ffffff\",\n            //         },\n            //         links: {\n            //             color: \"#ffffff\",\n            //             distance: 150,\n            //             enable: true,\n            //             opacity: 0.5,\n            //             width: 1,\n            //         },\n            //         collisions: {\n            //             enable: true,\n            //         },\n            //         move: {\n            //             directions: \"none\",\n            //             enable: true,\n            //             outModes: {\n            //                 default: \"bounce\",\n            //             },\n            //             random: false,\n            //             speed: 6,\n            //             straight: false,\n            //         },\n            //         number: {\n            //             density: {\n            //                 enable: true,\n            //                 area: 800,\n            //             },\n            //             value: 10,\n            //         },\n            //         opacity: {\n            //             value: 0.5,\n            //         },\n            //         shape: {\n            //             type: \"circle\",\n            //         },\n            //         size: {\n            //             value: { min: 1, max: 5 },\n            //         },\n            //     },\n            //     detectRetina: true,\n            // }}\n        />\n\n\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm />\n        {/* <FaceRecognition /> */}\n      </div>\n    );\n  }\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAKvC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEd,MAAMC,aAAa,GAAGJ,WAAW,CAAC,MAAMK,MAAM,IAAI;IAChDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACEG,SAAS,EAAE;MACTC,MAAM,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;UACPC,MAAM,EAAE,IAAI;UACZC,UAAU,EAAE,GAAG;QACjB;MACF;IACF;IAEF,MAAMX,QAAQ,CAACG,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,eAAe,GAAGd,WAAW,CAAC,MAAMe,SAAS,IAAI;IAGnD,MAAMT,OAAO,CAACC,GAAG,CAACQ,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAE1B,QAAC,SAAS;MAAC,SAAS,EAAC;MACP;MAAA;MACA,IAAI,EAAEX,aAAc;MACpB,MAAM,EAAEU;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAGF,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACR,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACR,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEb;AAEV,CAAC;AAAA,GAnHGX,GAAG;AAAA,KAAHA,GAAG;AAsHT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}